#include <stdio.h>
#define SIZE 10

int hash(int key) {
    return key % SIZE;
}

void insert(int hash_table[], int key) {
    int index = hash(key);

    while (hash_table[index] != -1) {
        index = (index + 1) % SIZE;
    }

    hash_table[index] = key;
}

int search(int hash_table[], int key) {
    int index = hash(key);
    int original_index = index;

    while (hash_table[index] != key) {
        index = (index + 1) % SIZE;

        if (index == original_index || hash_table[index] == -1) {
            return -1;
        }
    }

    return index;
}

int main() {
    int hash_table[SIZE];
    for (int i = 0; i < SIZE; i++) {
        hash_table[i] = -1;
    }

    insert(hash_table, 5);
    insert(hash_table, 15);
    insert(hash_table, 25);

    int search_result = search(hash_table, 15);
    if (search_result != -1) {
        printf("Key found at index: %d\n", search_result);
    } else {
        printf("Key not found\n");
    }

    return 0;
}
