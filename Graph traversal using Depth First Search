#include <stdio.h>
#include <stdbool.h>

#define MAX_VERTICES 100
typedef struct {
    int vertices[MAX_VERTICES][MAX_VERTICES];
    int numVertices;
} Graph;
void initGraph(Graph* graph) {
    graph->numVertices = 0;
    for (int i = 0; i < MAX_VERTICES; i++) {
        for (int j = 0; j < MAX_VERTICES; j++) {
            graph->vertices[i][j] = 0;
        }
    }
}
void addEdge(Graph* graph, int src, int dest) {
    graph->vertices[src][dest] = 1;
    graph->vertices[dest][src] = 1;
}
void dfs(Graph* graph, int vertex, bool visited[]) {
    visited[vertex] = true;
    printf("%d ", vertex);

    for (int i = 0; i < graph->numVertices; i++) {
        if (graph->vertices[vertex][i] == 1 && !visited[i]) {
            dfs(graph, i, visited);
        }
    }
}
void dfsTraversal(Graph* graph, int startVertex) {
    bool visited[MAX_VERTICES] = { false };

    dfs(graph, startVertex, visited);
}

int main() {
    Graph graph;
    initGraph(&graph);
    addEdge(&graph, 0, 1);
    addEdge(&graph, 0, 2);
    addEdge(&graph, 1, 3);
    addEdge(&graph, 1, 4);
    addEdge(&graph, 2, 5);
    addEdge(&graph, 2, 6);

    printf("Depth First Search Traversal: ");
    dfsTraversal(&graph, 0);

    return 0;
}
